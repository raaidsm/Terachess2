OVERALL PLAN:
-Starting position has a pre-defined set of legal moves
-Once a legal move is made, Java code calculates legal moves for every piece
  -This way, it knows if there is check/checkmate
-When JavaScript side selects a square, it queries the Java side for all legal moves for that piece
-When one of the legal moves is selected, the process repeats again

REFACTORING:
-Make separate functions for the different stages of calculateAllLegalMoves()
-Make board field of BoardManager private because nothing outside uses it
-Break main.js code into modules
GAME LOGIC:
-Change check-tracking variables when check is detected
-Rest check-tracking variables after a move is made (as making a legal move while under check stops check)
-Establish clause for checkmate
OVER THE INTERNET:
-Host game on server somehow
-Implement WebSockets to host communication with another person
MOVE RECORDING:
-Record captured pieces
-Implement saving of moves in client-side storage (IndexedDB)
-Implement going back and forth in moves (undo last move, redo last move)